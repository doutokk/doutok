// Code generated by hertz generator.

package kitex_gen

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	kitex_gen "github.com/doutokk/doutok/app/product/kitex_gen/github.com/doutokk/doutok/rpc_gen/kitex_gen"
)

// ListProducts .
// @router /product [POST]
func ListProducts(ctx context.Context, c *app.RequestContext) {
	var err error
	var req kitex_gen.ListProductsReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(kitex_gen.ListProductsResp)

	c.JSON(consts.StatusOK, resp)
}

// GetProduct .
// @router /product/:id [GET]
func GetProduct(ctx context.Context, c *app.RequestContext) {
	var err error
	var req kitex_gen.GetProductReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(kitex_gen.GetProductResp)

	c.JSON(consts.StatusOK, resp)
}

// SearchProducts .
// @router /product [GET]
func SearchProducts(ctx context.Context, c *app.RequestContext) {
	var err error
	var req kitex_gen.SearchProductsReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(kitex_gen.SearchProductsResp)

	c.JSON(consts.StatusOK, resp)
}
