// Code generated by hertz generator.

package cart

import (
	"context"
	"github.com/doutokk/doutok/app/cart/biz/service"
	"github.com/doutokk/doutok/app/cart/infra/rpc"
	cart "github.com/doutokk/doutok/rpc_gen/kitex_gen/cart"
	"github.com/doutokk/doutok/rpc_gen/kitex_gen/product"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

type Response struct {
	Item []BffProduct `json:"item"`
}

// product
type BffProduct struct {
	Description string  `json:"description"`
	Img         string  `json:"img"`
	Price       float32 `json:"price"`
	ProductID   uint32  `json:"product_id"`
	ProductName string  `json:"product_name"`
	Quantity    int32   `json:"quantity"`
}

// AddItem .
// @router /product/edit [POST]
func AddItem(ctx context.Context, c *app.RequestContext) {
	var err error
	var req cart.AddItemReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	server := service.NewAddItemService(ctx)

	resp, err := server.Run(&req)

	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	c.JSON(consts.StatusOK, resp)
}

// GetCart .
// @router /cart [GET]
func GetCart(ctx context.Context, c *app.RequestContext) {
	var err error
	var req cart.GetCartReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	server := service.NewGetCartService(ctx)
	resp, err := server.Run(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	// 下面是bff服务提供
	productCli := rpc.ProductClient
	var bffCart []*BffProduct
	items := resp.Cart.Items
	for _, item := range items {
		getProductReq := &product.GetProductReq{Id: item.ProductId}
		productResp, productErr := productCli.GetProduct(ctx, getProductReq)
		if productErr != nil {
			c.String(consts.StatusBadRequest, productErr.Error())
			return
		}
		bffProduct := productResp.Product
		bffCart = append(bffCart, &BffProduct{
			Description: bffProduct.Description,
			Img:         bffProduct.Picture,
			Price:       bffProduct.Price,
			ProductID:   bffProduct.Id,
			ProductName: bffProduct.Name,
			Quantity:    item.Quantity,
		})
	}

	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	c.JSON(consts.StatusOK, bffCart)
}
